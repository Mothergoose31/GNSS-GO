// Code generated by capnpc-go. DO NOT EDIT.

package gnss

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	math "math"
)

type Ephemeris capnp.Struct

// Ephemeris_TypeID is the unique identifier for the type Ephemeris.
const Ephemeris_TypeID = 0x9691bc6bef5f044a

func NewEphemeris(s *capnp.Segment) (Ephemeris, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 272, PointerCount: 2})
	return Ephemeris(st), err
}

func NewRootEphemeris(s *capnp.Segment) (Ephemeris, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 272, PointerCount: 2})
	return Ephemeris(st), err
}

func ReadRootEphemeris(msg *capnp.Message) (Ephemeris, error) {
	root, err := msg.Root()
	return Ephemeris(root.Struct()), err
}

func (s Ephemeris) String() string {
	str, _ := text.Marshal(0x9691bc6bef5f044a, capnp.Struct(s))
	return str
}

func (s Ephemeris) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Ephemeris) DecodeFromPtr(p capnp.Ptr) Ephemeris {
	return Ephemeris(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Ephemeris) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Ephemeris) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Ephemeris) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Ephemeris) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Ephemeris) SatelliteId() uint16 {
	return capnp.Struct(s).Uint16(0)
}

func (s Ephemeris) SetSatelliteId(v uint16) {
	capnp.Struct(s).SetUint16(0, v)
}

func (s Ephemeris) Year() uint16 {
	return capnp.Struct(s).Uint16(2)
}

func (s Ephemeris) SetYear(v uint16) {
	capnp.Struct(s).SetUint16(2, v)
}

func (s Ephemeris) Month() uint16 {
	return capnp.Struct(s).Uint16(4)
}

func (s Ephemeris) SetMonth(v uint16) {
	capnp.Struct(s).SetUint16(4, v)
}

func (s Ephemeris) Day() uint16 {
	return capnp.Struct(s).Uint16(6)
}

func (s Ephemeris) SetDay(v uint16) {
	capnp.Struct(s).SetUint16(6, v)
}

func (s Ephemeris) Hour() uint16 {
	return capnp.Struct(s).Uint16(8)
}

func (s Ephemeris) SetHour(v uint16) {
	capnp.Struct(s).SetUint16(8, v)
}

func (s Ephemeris) Minute() uint16 {
	return capnp.Struct(s).Uint16(10)
}

func (s Ephemeris) SetMinute(v uint16) {
	capnp.Struct(s).SetUint16(10, v)
}

func (s Ephemeris) Second() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(12))
}

func (s Ephemeris) SetSecond(v float32) {
	capnp.Struct(s).SetUint32(12, math.Float32bits(v))
}

func (s Ephemeris) Af0() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(16))
}

func (s Ephemeris) SetAf0(v float64) {
	capnp.Struct(s).SetUint64(16, math.Float64bits(v))
}

func (s Ephemeris) Af1() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(24))
}

func (s Ephemeris) SetAf1(v float64) {
	capnp.Struct(s).SetUint64(24, math.Float64bits(v))
}

func (s Ephemeris) Af2() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(32))
}

func (s Ephemeris) SetAf2(v float64) {
	capnp.Struct(s).SetUint64(32, math.Float64bits(v))
}

func (s Ephemeris) Iode() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(40))
}

func (s Ephemeris) SetIode(v float64) {
	capnp.Struct(s).SetUint64(40, math.Float64bits(v))
}

func (s Ephemeris) Crs() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(48))
}

func (s Ephemeris) SetCrs(v float64) {
	capnp.Struct(s).SetUint64(48, math.Float64bits(v))
}

func (s Ephemeris) DeltaN() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(56))
}

func (s Ephemeris) SetDeltaN(v float64) {
	capnp.Struct(s).SetUint64(56, math.Float64bits(v))
}

func (s Ephemeris) M0() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(64))
}

func (s Ephemeris) SetM0(v float64) {
	capnp.Struct(s).SetUint64(64, math.Float64bits(v))
}

func (s Ephemeris) Cuc() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(72))
}

func (s Ephemeris) SetCuc(v float64) {
	capnp.Struct(s).SetUint64(72, math.Float64bits(v))
}

func (s Ephemeris) Eccentricity() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(80))
}

func (s Ephemeris) SetEccentricity(v float64) {
	capnp.Struct(s).SetUint64(80, math.Float64bits(v))
}

func (s Ephemeris) Cus() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(88))
}

func (s Ephemeris) SetCus(v float64) {
	capnp.Struct(s).SetUint64(88, math.Float64bits(v))
}

func (s Ephemeris) SemiMajorAxis() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(96))
}

func (s Ephemeris) SetSemiMajorAxis(v float64) {
	capnp.Struct(s).SetUint64(96, math.Float64bits(v))
}

func (s Ephemeris) Toe() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(104))
}

func (s Ephemeris) SetToe(v float64) {
	capnp.Struct(s).SetUint64(104, math.Float64bits(v))
}

func (s Ephemeris) Cic() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(112))
}

func (s Ephemeris) SetCic(v float64) {
	capnp.Struct(s).SetUint64(112, math.Float64bits(v))
}

func (s Ephemeris) Omega0() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(120))
}

func (s Ephemeris) SetOmega0(v float64) {
	capnp.Struct(s).SetUint64(120, math.Float64bits(v))
}

func (s Ephemeris) Cis() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(128))
}

func (s Ephemeris) SetCis(v float64) {
	capnp.Struct(s).SetUint64(128, math.Float64bits(v))
}

func (s Ephemeris) Inclination() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(136))
}

func (s Ephemeris) SetInclination(v float64) {
	capnp.Struct(s).SetUint64(136, math.Float64bits(v))
}

func (s Ephemeris) Crc() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(144))
}

func (s Ephemeris) SetCrc(v float64) {
	capnp.Struct(s).SetUint64(144, math.Float64bits(v))
}

func (s Ephemeris) PerigeeArgument() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(152))
}

func (s Ephemeris) SetPerigeeArgument(v float64) {
	capnp.Struct(s).SetUint64(152, math.Float64bits(v))
}

func (s Ephemeris) RateOfRightAscension() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(160))
}

func (s Ephemeris) SetRateOfRightAscension(v float64) {
	capnp.Struct(s).SetUint64(160, math.Float64bits(v))
}

func (s Ephemeris) RateOfInclination() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(168))
}

func (s Ephemeris) SetRateOfInclination(v float64) {
	capnp.Struct(s).SetUint64(168, math.Float64bits(v))
}

func (s Ephemeris) CodesL2() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(176))
}

func (s Ephemeris) SetCodesL2(v float64) {
	capnp.Struct(s).SetUint64(176, math.Float64bits(v))
}

func (s Ephemeris) GpsWeekDEPRECATED() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(184))
}

func (s Ephemeris) SetGpsWeekDEPRECATED(v float64) {
	capnp.Struct(s).SetUint64(184, math.Float64bits(v))
}

func (s Ephemeris) L2() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(192))
}

func (s Ephemeris) SetL2(v float64) {
	capnp.Struct(s).SetUint64(192, math.Float64bits(v))
}

func (s Ephemeris) SignalAccuracy() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(200))
}

func (s Ephemeris) SetSignalAccuracy(v float64) {
	capnp.Struct(s).SetUint64(200, math.Float64bits(v))
}

func (s Ephemeris) SatelliteHealth() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(208))
}

func (s Ephemeris) SetSatelliteHealth(v float64) {
	capnp.Struct(s).SetUint64(208, math.Float64bits(v))
}

func (s Ephemeris) Tgd() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(216))
}

func (s Ephemeris) SetTgd(v float64) {
	capnp.Struct(s).SetUint64(216, math.Float64bits(v))
}

func (s Ephemeris) Iodc() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(224))
}

func (s Ephemeris) SetIodc(v float64) {
	capnp.Struct(s).SetUint64(224, math.Float64bits(v))
}

func (s Ephemeris) TransmissionTime() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(232))
}

func (s Ephemeris) SetTransmissionTime(v float64) {
	capnp.Struct(s).SetUint64(232, math.Float64bits(v))
}

func (s Ephemeris) FitInterval() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(240))
}

func (s Ephemeris) SetFitInterval(v float64) {
	capnp.Struct(s).SetUint64(240, math.Float64bits(v))
}

func (s Ephemeris) TimeOfClock() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(248))
}

func (s Ephemeris) SetTimeOfClock(v float64) {
	capnp.Struct(s).SetUint64(248, math.Float64bits(v))
}

func (s Ephemeris) IonosphereCoefficientsValid() bool {
	return capnp.Struct(s).Bit(2048)
}

func (s Ephemeris) SetIonosphereCoefficientsValid(v bool) {
	capnp.Struct(s).SetBit(2048, v)
}

func (s Ephemeris) IonosphereAlpha() (capnp.Float64List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return capnp.Float64List(p.List()), err
}

func (s Ephemeris) HasIonosphereAlpha() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Ephemeris) SetIonosphereAlpha(v capnp.Float64List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewIonosphereAlpha sets the ionosphereAlpha field to a newly
// allocated capnp.Float64List, preferring placement in s's segment.
func (s Ephemeris) NewIonosphereAlpha(n int32) (capnp.Float64List, error) {
	l, err := capnp.NewFloat64List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Float64List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s Ephemeris) IonosphereBeta() (capnp.Float64List, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return capnp.Float64List(p.List()), err
}

func (s Ephemeris) HasIonosphereBeta() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Ephemeris) SetIonosphereBeta(v capnp.Float64List) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewIonosphereBeta sets the ionosphereBeta field to a newly
// allocated capnp.Float64List, preferring placement in s's segment.
func (s Ephemeris) NewIonosphereBeta(n int32) (capnp.Float64List, error) {
	l, err := capnp.NewFloat64List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Float64List{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}
func (s Ephemeris) TimeOfWeekCount() uint32 {
	return capnp.Struct(s).Uint32(260)
}

func (s Ephemeris) SetTimeOfWeekCount(v uint32) {
	capnp.Struct(s).SetUint32(260, v)
}

func (s Ephemeris) ToeWeek() uint16 {
	return capnp.Struct(s).Uint16(258)
}

func (s Ephemeris) SetToeWeek(v uint16) {
	capnp.Struct(s).SetUint16(258, v)
}

func (s Ephemeris) TimeOfClockWeek() uint16 {
	return capnp.Struct(s).Uint16(264)
}

func (s Ephemeris) SetTimeOfClockWeek(v uint16) {
	capnp.Struct(s).SetUint16(264, v)
}

// Ephemeris_List is a list of Ephemeris.
type Ephemeris_List = capnp.StructList[Ephemeris]

// NewEphemeris creates a new list of Ephemeris.
func NewEphemeris_List(s *capnp.Segment, sz int32) (Ephemeris_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 272, PointerCount: 2}, sz)
	return capnp.StructList[Ephemeris](l), err
}

// Ephemeris_Future is a wrapper for a Ephemeris promised by a client call.
type Ephemeris_Future struct{ *capnp.Future }

func (f Ephemeris_Future) Struct() (Ephemeris, error) {
	p, err := f.Future.Ptr()
	return Ephemeris(p.Struct()), err
}

type GlonassEphemeris capnp.Struct

// GlonassEphemeris_TypeID is the unique identifier for the type GlonassEphemeris.
const GlonassEphemeris_TypeID = 0xc98ab11e016b9507

func NewGlonassEphemeris(s *capnp.Segment) (GlonassEphemeris, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 144, PointerCount: 0})
	return GlonassEphemeris(st), err
}

func NewRootGlonassEphemeris(s *capnp.Segment) (GlonassEphemeris, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 144, PointerCount: 0})
	return GlonassEphemeris(st), err
}

func ReadRootGlonassEphemeris(msg *capnp.Message) (GlonassEphemeris, error) {
	root, err := msg.Root()
	return GlonassEphemeris(root.Struct()), err
}

func (s GlonassEphemeris) String() string {
	str, _ := text.Marshal(0xc98ab11e016b9507, capnp.Struct(s))
	return str
}

func (s GlonassEphemeris) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GlonassEphemeris) DecodeFromPtr(p capnp.Ptr) GlonassEphemeris {
	return GlonassEphemeris(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GlonassEphemeris) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GlonassEphemeris) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GlonassEphemeris) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GlonassEphemeris) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GlonassEphemeris) SatelliteId() uint16 {
	return capnp.Struct(s).Uint16(0)
}

func (s GlonassEphemeris) SetSatelliteId(v uint16) {
	capnp.Struct(s).SetUint16(0, v)
}

func (s GlonassEphemeris) Year() uint16 {
	return capnp.Struct(s).Uint16(2)
}

func (s GlonassEphemeris) SetYear(v uint16) {
	capnp.Struct(s).SetUint16(2, v)
}

func (s GlonassEphemeris) DayOfYear() uint16 {
	return capnp.Struct(s).Uint16(4)
}

func (s GlonassEphemeris) SetDayOfYear(v uint16) {
	capnp.Struct(s).SetUint16(4, v)
}

func (s GlonassEphemeris) Hour() uint16 {
	return capnp.Struct(s).Uint16(6)
}

func (s GlonassEphemeris) SetHour(v uint16) {
	capnp.Struct(s).SetUint16(6, v)
}

func (s GlonassEphemeris) Minute() uint16 {
	return capnp.Struct(s).Uint16(8)
}

func (s GlonassEphemeris) SetMinute(v uint16) {
	capnp.Struct(s).SetUint16(8, v)
}

func (s GlonassEphemeris) Second() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(12))
}

func (s GlonassEphemeris) SetSecond(v float32) {
	capnp.Struct(s).SetUint32(12, math.Float32bits(v))
}

func (s GlonassEphemeris) XPosition() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(16))
}

func (s GlonassEphemeris) SetXPosition(v float64) {
	capnp.Struct(s).SetUint64(16, math.Float64bits(v))
}

func (s GlonassEphemeris) XVelocity() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(24))
}

func (s GlonassEphemeris) SetXVelocity(v float64) {
	capnp.Struct(s).SetUint64(24, math.Float64bits(v))
}

func (s GlonassEphemeris) XAcceleration() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(32))
}

func (s GlonassEphemeris) SetXAcceleration(v float64) {
	capnp.Struct(s).SetUint64(32, math.Float64bits(v))
}

func (s GlonassEphemeris) YPosition() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(40))
}

func (s GlonassEphemeris) SetYPosition(v float64) {
	capnp.Struct(s).SetUint64(40, math.Float64bits(v))
}

func (s GlonassEphemeris) YVelocity() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(48))
}

func (s GlonassEphemeris) SetYVelocity(v float64) {
	capnp.Struct(s).SetUint64(48, math.Float64bits(v))
}

func (s GlonassEphemeris) YAcceleration() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(56))
}

func (s GlonassEphemeris) SetYAcceleration(v float64) {
	capnp.Struct(s).SetUint64(56, math.Float64bits(v))
}

func (s GlonassEphemeris) ZPosition() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(64))
}

func (s GlonassEphemeris) SetZPosition(v float64) {
	capnp.Struct(s).SetUint64(64, math.Float64bits(v))
}

func (s GlonassEphemeris) ZVelocity() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(72))
}

func (s GlonassEphemeris) SetZVelocity(v float64) {
	capnp.Struct(s).SetUint64(72, math.Float64bits(v))
}

func (s GlonassEphemeris) ZAcceleration() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(80))
}

func (s GlonassEphemeris) SetZAcceleration(v float64) {
	capnp.Struct(s).SetUint64(80, math.Float64bits(v))
}

func (s GlonassEphemeris) SatelliteType() uint8 {
	return capnp.Struct(s).Uint8(10)
}

func (s GlonassEphemeris) SetSatelliteType(v uint8) {
	capnp.Struct(s).SetUint8(10, v)
}

func (s GlonassEphemeris) UserRangeAccuracy() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(88))
}

func (s GlonassEphemeris) SetUserRangeAccuracy(v float32) {
	capnp.Struct(s).SetUint32(88, math.Float32bits(v))
}

func (s GlonassEphemeris) AgeOfOperation() uint8 {
	return capnp.Struct(s).Uint8(11)
}

func (s GlonassEphemeris) SetAgeOfOperation(v uint8) {
	capnp.Struct(s).SetUint8(11, v)
}

func (s GlonassEphemeris) SatelliteHealth() uint8 {
	return capnp.Struct(s).Uint8(92)
}

func (s GlonassEphemeris) SetSatelliteHealth(v uint8) {
	capnp.Struct(s).SetUint8(92, v)
}

func (s GlonassEphemeris) TimeCorrectionDEPRECATED() uint16 {
	return capnp.Struct(s).Uint16(94)
}

func (s GlonassEphemeris) SetTimeCorrectionDEPRECATED(v uint16) {
	capnp.Struct(s).SetUint16(94, v)
}

func (s GlonassEphemeris) TimeGroupDelay() uint16 {
	return capnp.Struct(s).Uint16(96)
}

func (s GlonassEphemeris) SetTimeGroupDelay(v uint16) {
	capnp.Struct(s).SetUint16(96, v)
}

func (s GlonassEphemeris) TauN() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(104))
}

func (s GlonassEphemeris) SetTauN(v float64) {
	capnp.Struct(s).SetUint64(104, math.Float64bits(v))
}

func (s GlonassEphemeris) DeltaTauN() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(112))
}

func (s GlonassEphemeris) SetDeltaTauN(v float64) {
	capnp.Struct(s).SetUint64(112, math.Float64bits(v))
}

func (s GlonassEphemeris) GammaN() float64 {
	return math.Float64frombits(capnp.Struct(s).Uint64(120))
}

func (s GlonassEphemeris) SetGammaN(v float64) {
	capnp.Struct(s).SetUint64(120, math.Float64bits(v))
}

func (s GlonassEphemeris) FrequencyNumber1() uint8 {
	return capnp.Struct(s).Uint8(93)
}

func (s GlonassEphemeris) SetFrequencyNumber1(v uint8) {
	capnp.Struct(s).SetUint8(93, v)
}

func (s GlonassEphemeris) FrequencyNumber2() uint8 {
	return capnp.Struct(s).Uint8(98)
}

func (s GlonassEphemeris) SetFrequencyNumber2(v uint8) {
	capnp.Struct(s).SetUint8(98, v)
}

func (s GlonassEphemeris) FrequencyNumber3() uint8 {
	return capnp.Struct(s).Uint8(99)
}

func (s GlonassEphemeris) SetFrequencyNumber3(v uint8) {
	capnp.Struct(s).SetUint8(99, v)
}

func (s GlonassEphemeris) FrequencyNumber4() uint8 {
	return capnp.Struct(s).Uint8(100)
}

func (s GlonassEphemeris) SetFrequencyNumber4(v uint8) {
	capnp.Struct(s).SetUint8(100, v)
}

func (s GlonassEphemeris) FrequencyNumberDEPRECATED() uint32 {
	return capnp.Struct(s).Uint32(128)
}

func (s GlonassEphemeris) SetFrequencyNumberDEPRECATED(v uint32) {
	capnp.Struct(s).SetUint32(128, v)
}

func (s GlonassEphemeris) N4() uint8 {
	return capnp.Struct(s).Uint8(101)
}

func (s GlonassEphemeris) SetN4(v uint8) {
	capnp.Struct(s).SetUint8(101, v)
}

func (s GlonassEphemeris) Nt() uint16 {
	return capnp.Struct(s).Uint16(102)
}

func (s GlonassEphemeris) SetNt(v uint16) {
	capnp.Struct(s).SetUint16(102, v)
}

func (s GlonassEphemeris) FrequencyNumber() int16 {
	return int16(capnp.Struct(s).Uint16(132))
}

func (s GlonassEphemeris) SetFrequencyNumber(v int16) {
	capnp.Struct(s).SetUint16(132, uint16(v))
}

func (s GlonassEphemeris) TimeCorrectionSeconds() uint32 {
	return capnp.Struct(s).Uint32(136)
}

func (s GlonassEphemeris) SetTimeCorrectionSeconds(v uint32) {
	capnp.Struct(s).SetUint32(136, v)
}

// GlonassEphemeris_List is a list of GlonassEphemeris.
type GlonassEphemeris_List = capnp.StructList[GlonassEphemeris]

// NewGlonassEphemeris creates a new list of GlonassEphemeris.
func NewGlonassEphemeris_List(s *capnp.Segment, sz int32) (GlonassEphemeris_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 144, PointerCount: 0}, sz)
	return capnp.StructList[GlonassEphemeris](l), err
}

// GlonassEphemeris_Future is a wrapper for a GlonassEphemeris promised by a client call.
type GlonassEphemeris_Future struct{ *capnp.Future }

func (f GlonassEphemeris_Future) Struct() (GlonassEphemeris, error) {
	p, err := f.Future.Ptr()
	return GlonassEphemeris(p.Struct()), err
}

type EphemerisCache capnp.Struct

// EphemerisCache_TypeID is the unique identifier for the type EphemerisCache.
const EphemerisCache_TypeID = 0xfb7d655c3ad3e9bb

func NewEphemerisCache(s *capnp.Segment) (EphemerisCache, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return EphemerisCache(st), err
}

func NewRootEphemerisCache(s *capnp.Segment) (EphemerisCache, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return EphemerisCache(st), err
}

func ReadRootEphemerisCache(msg *capnp.Message) (EphemerisCache, error) {
	root, err := msg.Root()
	return EphemerisCache(root.Struct()), err
}

func (s EphemerisCache) String() string {
	str, _ := text.Marshal(0xfb7d655c3ad3e9bb, capnp.Struct(s))
	return str
}

func (s EphemerisCache) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (EphemerisCache) DecodeFromPtr(p capnp.Ptr) EphemerisCache {
	return EphemerisCache(capnp.Struct{}.DecodeFromPtr(p))
}

func (s EphemerisCache) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s EphemerisCache) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s EphemerisCache) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s EphemerisCache) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s EphemerisCache) GpsEphemerides() (Ephemeris_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Ephemeris_List(p.List()), err
}

func (s EphemerisCache) HasGpsEphemerides() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s EphemerisCache) SetGpsEphemerides(v Ephemeris_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewGpsEphemerides sets the gpsEphemerides field to a newly
// allocated Ephemeris_List, preferring placement in s's segment.
func (s EphemerisCache) NewGpsEphemerides(n int32) (Ephemeris_List, error) {
	l, err := NewEphemeris_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Ephemeris_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s EphemerisCache) GlonassEphemerides() (GlonassEphemeris_List, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return GlonassEphemeris_List(p.List()), err
}

func (s EphemerisCache) HasGlonassEphemerides() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s EphemerisCache) SetGlonassEphemerides(v GlonassEphemeris_List) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewGlonassEphemerides sets the glonassEphemerides field to a newly
// allocated GlonassEphemeris_List, preferring placement in s's segment.
func (s EphemerisCache) NewGlonassEphemerides(n int32) (GlonassEphemeris_List, error) {
	l, err := NewGlonassEphemeris_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return GlonassEphemeris_List{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}

// EphemerisCache_List is a list of EphemerisCache.
type EphemerisCache_List = capnp.StructList[EphemerisCache]

// NewEphemerisCache creates a new list of EphemerisCache.
func NewEphemerisCache_List(s *capnp.Segment, sz int32) (EphemerisCache_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[EphemerisCache](l), err
}

// EphemerisCache_Future is a wrapper for a EphemerisCache promised by a client call.
type EphemerisCache_Future struct{ *capnp.Future }

func (f EphemerisCache_Future) Struct() (EphemerisCache, error) {
	p, err := f.Future.Ptr()
	return EphemerisCache(p.Struct()), err
}

const schema_b3ca6d2462778bb1 = "x\xda\x9c\xd7m\x88\\\xd5\x19\x07\xf0\xe7\xb9/;\xb3" +
	"\xef\xd9\x9c\x93\xf7\xdd\xecf\x8d\x9a\x0d\xb1\xcd\x9b\x90\x06" +
	"\xcbf\xb3\xb3\x98\x88\x9a\xdd\xbd\x8b6\x10\xa97w\xce" +
	"\xce\\wf\xeex\xef\x9d\xba\x13*jI\xc1\xda\x08" +
	"*Zl\xf1\x83B\x84\xb4DH\xda\x04R\x1a!\x85" +
	"\x08Q\"\xa4m\x0a)$`K\x84\x14*\x8d\x90\x82" +
	"\xa5\xca\x94\xff\xb9;/MW[\xfcv\xe7w\x9e\xf3" +
	"\xdcs\xcf\xcc\x9c\xff\xcc\xe6\x07\xec]\xd6\x96\xee\xc0 " +
	"c\xaa\xdfn\xab=`}\xf7\xefsg_\xfe\x09M" +
	"\x0d\xf0p\xed\xe4\x8f\x9f:\xb8\xbe\xf8\xc1\xaf\xc86R" +
	"D\xdb\x06x'\x8b{\x18\x97#\x1c\xb4\x13\xd7R\xaf" +
	"\xcd\xf1\xda\x93/\xbc\x8f\xf2\xa5\xcdr\x0b%ou\x86" +
	",Nw\xe2\xf2d\xe7h\x8a\xb8\xf6\x9b\xbf\xfea\xe7" +
	"\x01\xf5\xf4\xbf\xa8o\x80o\xef}M\x1cd\xf1\xa9H" +
	"\x11\x89O\xc4StOm\xa2\x9cWE\x15\xfaf\x94" +
	"qc\xd7\x89\xc3\x8a\x17WB\xf5\x0d\xcf-\x97\xca;" +
	"'\xca\xf9Q=\x1cM2O\x1d7-\"\x8b\x89\xc4" +
	"\xdb\xd6A\"\xe7\xa8e\xb2s\xc22\xb8\x8fY2\xfc" +
	"\x1dk#\x91s\x0c~\x0an\x18\x92\x0d\"q\xd2\xda" +
	"J\xe4\x1c\x87\x9f\x81\x9b\xa6d\x93H\x9c\xb6\x86\x89\x9c" +
	"\x13\xf0\xb3p\xcb\x92l\x11\x89_\xeb>\xa7\xe0\xe7\xe0" +
	"\xb6-\xd9&\x12\xefZ;\x89\x9c3\xf0\xf3\xf06S" +
	"r\x1b\x91\xf8\xad\xf6\xb3\xf0\x0b\xf0\x94!\xb1\x7f\xe2=" +
	"\xdd\xff\x1c\xfc\"<mJN\x13\x89\xf7\xb5\x9f\x87_" +
	"\x82\xb7[\x92\xdb\x89\xc4\x87\xda/\xc0/\xc3;l\xc9" +
	"\x1dD\xe2wz=\x17\xe1W\xe0\x9dm\x92;\x89\xc4" +
	"\x1fu\xfd%\xf8UxWJr\x17\x91\xf8\x93^\xcf" +
	"e\xf8G\xf0\xee\xb4\xe4n\"q\xcdZM\xe4\\\x81" +
	"_\x87\xf7\xb4K\xee!\x12\x7f\xd6}\xae\xc2o\xc0{" +
	";$\xf7\x12\x89\x8f\xad'\x88\x9c\xeb\xf0\x9b\xf0%\x9d" +
	"\x92\x97\xe0\xbd\xd3\xf57\xe0\xb7\xe0}]\x92\xfb\x88\xc4" +
	"\xa7VH\xe4\xdc\x84\x7f\x0e_\xda-y)\x91\xf8\xa7" +
	"\xae\xbfe\x99<m\x1b\xdc'z$\x0b\"\xf1\x85\xe6" +
	"\xcfPn\xc1e\xafdI$\xd8\xc6\xf2?\x87\xa7\xe1" +
	"\xcb\x96H^F$l{\x98h\xda6\xd9\xe9\x02/" +
	"\xef\x93\xbc\x9cH\xb4\xdb\xf84\xa4\xe1\x12\xbeb\xa9\xe4" +
	"\x15D\xa2\x0f\xe5N\x17|%|\xa5\x90\xbc\x92H," +
	"\xb3\x7f@\xe4H\xf8\x10|\x95\x94\xbc\x8aH\x0c\xd8\xbf" +
	" r\x86\xe0\x9b\xe0\xab\x97I^M$F\xecW\x88" +
	"\x9cM\xf0\x1d\xf05\xcb%\xaf!\x12\xf7\xda\xbb\x89\x9c" +
	"\xcd\xf0\xfb\xe0\xfd+$\xf7\x13\x89o\xe9\xfa\xfb\xe0{" +
	"\xe0\x03+%\x0f\x10\x89\x09\x1b\xbb\xbf\x0b\xfe |\xed" +
	"*\xc9k\x89\xc4^\xfb\x10\x91\xb3\x07>\x03\x1f\\-" +
	"y\x90HL\xe9uN\xc2\x0f\xc0\x87\xd6H\x1e\"\x12" +
	"\xfb\xf5s\xcd\xc0\x1f\x87\xaf\xeb\x97\xbc\x8eH<f\xe3" +
	"S\xf2\x1dx\x16>< y\x98H\xb8\xf6\x0bDN" +
	"\x16^\x86\xdf\xb1V\xf2\x1dD\xa2\xa8\xf7\xad\x00\x9f\x87" +
	"\xaf\x1f\x94\xbc\x9eHT\xb4\xc7\xf0gm\x83\xd7\xdd\x99" +
	"\x96|'\x91x\xda\xfe\x0b\x91s\x18\xfe\x92m0\xdf" +
	"%\xf9.\"\xf1\xa2^\xe6\x11\xf01\xb4\xb9\x9b%\xdf" +
	"\x8d/\xa9~\xac\xa3\xf0s\xf0\x0dc\x927\xe0K\xa4" +
	"\xeb\xcf\xc2/\xc0G\x9e\x93<\x82/\x8b\xde\xces\xf0" +
	"\x8b\xf0\x8d\x87%o\xc4\x97E\xd7_\x80_\xb6\x0d\xae" +
	"En\xac\x0a\x05?\xa6\x94\xda\x9b\xe5\x14\x19\x9c\"\xee" +
	"\xad*7\xac\xbf\x18,\x06\xa58_\x7f\x95\xca\xba\xd5" +
	"FY>\xa84\xcaF\x8b~\xa9\x12\xab\xc6\xcbHy" +
	"A)\xcb\x1ddp\x07q\xca\x9d\xdd\xcc\x9ddp\xa7" +
	"\xbe\xde\xd2r\xbd\xb5~\xdd\xeb\x07Y\xd5\x18\xf0\xc2\xa8" +
	"~=\x9aU\x85\xd8}\xb8\xfe\xd2,6[y\x15\xaf" +
	"~]S\x9e\xa7Jq\xe8S\xaf\xe7\xc7\xd5\x96\x92F" +
	"\xa3Z\xa4\x8a\xfeC\xee\x13\x01\x0d\x86c\xf3~\xc3S" +
	"q\xd0rc\xbf\xd1r4(\xaa\x9c\xdbr\xb7\xe6\x94" +
	"\x9a_\xf2\x0a~\xc9\x8d)\xe5\x07\xa5\x96U7\xd7S" +
	"V\xa1\x9fSj\x8c\xc3\\\xa5\xa8J15FB7" +
	"V\xfbf\xa7}\xce\xe5\xe3\xb1\xc8S\xa5\xde\xa8\xa5\xc9" +
	"\xc2\xf0\xde\x12'w\xf0\x03n\x8c=\xe3\x05Y\x15=" +
	"\xd8\xd8\xb3Z\xae\x1c=\xaa\xd4\\\x86'&\xa7'\xc6" +
	"\xc7f&8\xd3\xd8\xa7B\xb3,\xf2s%\xb70\xe6" +
	"\xd1\xa8W\x09]\xaf\xda\x1cXx\xffY\xedQn!" +
	"\xceSsOr\xd9\xd6w\xa6\xf9\\q\xe8\x96\xa2\xa2" +
	"\x1f1\x16=\xe3\x17\x155\x9fl\xd6\x8f\xf7\x96b\x15" +
	"R\xea{n\xa19\xc3/\xaa}\xb3\xe3\x05J\x05\xde" +
	"\\s\x07\x83R\x10\x95\xf3\xca\x08\xd5x\xa0fg}" +
	"\xcfW\xa58z\xc4M\x15\xfc,3\x19\xcc-U\x1c" +
	"\xaa\xb1B9\xef\x12\xf7\x10O\x9a\xac\xdb\xf4\xb4\x14\xd0" +
	"h\xa8v\xab\xd8\xbd}<\xb9\xf9\xa3\x8a\xd5\xdcxP" +
	"\xc1\xdb\x90&\x83\xd3\xc4\xcf\xc4\x81\xc2\xde\xd5?\xb2\x8d" +
	"er\xe0\xcda\x80\x1a#\xf5`\xb5\x16\x0d\xd6\xfb\x0b" +
	"A\xc9\x8d\"\x14\x0d6\xf2\xf5p#__4q\x02" +
	"\x1c1Mv^7[\xf2\xf55\x13'\xccK\xf07" +
	"\xcc\x96|\xfd\xa99M\xe4\xbc\x0e?j\xb6\xe4\xeb[" +
	"\xba\xfe\x0d\xf81\xb3%_\xdf6q\xc0\xbf\x09?\x0e" +
	"\xb7\xcd$_\x7f\xae\xfd(\xfc\x04\xbc\xcdH\xf2\xf5\x1d" +
	"\xdd\xff8\xfc\x0c<e&\xf9zZ\xfb)\xf89x" +
	"\xdaJ\xf2\xf5]\x139t\x16~\x01\xden'\xf9\xfa" +
	"\x9e\xae?\x0f\xbf\x04\xefhK\xf2\xf5C\xed\x17\xe1W" +
	"\xe0\x9d\xa9\x85|\xd5}.\xc3?\x82w\xa5\x93|\xbd" +
	"\xa6\xeb\xaf\xc2o\xc0\xbb\xdb\x93|\xfdX\xfbu\xf8M" +
	"xOG\x92\xaf\x9f\xe8>\x7f\x83\x7ff\xb6\xe4\xeb?" +
	"\xb4\xdf2M\x9e\xd6\xf1\xba<\x89\xd7/\xccW\x88\xa6" +
	"\x11\x7f]:];\x93tm\xb7p\xa0\xa6\xe1R\xa7" +
	"\xeb\x81$]\xfb,\x1c\x90K\xe0\xfdp\xf1\xcd$^" +
	"WY\x1f \xcf\xe0\x9b\xe0rs\x12\xaf#\xba\xcf\x06" +
	"\xf8v\xf8\xb2\xee$^\xb7\xe8_\x19\x9b\xe0;\xe0\xcb" +
	"{\x92|\xbd\xd7\xc2Sm\x87\xef\x82\xaf\xe8M\xf2\xf5" +
	"\xdb\xfaW\xc6\x0ex\x06\xbe\xf2\xb1$_\xc7,\xe4M" +
	"\x06>\x09_u0\xc9\xd7\x87\xb4O\xc2\x0f\xc0W{" +
	"I\xbe\xee\xd7~\x00\x9e\x87\xaf\xc9&\xf9\xaa\xb4\xe7\xe1" +
	"1\xbc\x7f(\xc9\xd7'\xad\xdf\x139\xf3\xf0\xc3\xf0\x01" +
	"\x95\xe4\xebs\xfa\xd7\xcd\xf7\xe1\xcf\xc3\xd7nK\xf2\xf5" +
	"\x87\xda\x9f\x85\x1f\x81\x0f\xeeN\xf2\xf5Gz\xdf\x9e\x87" +
	"\xbf\x0a\x1f\x1aN\xf2\xf5e\xeb\x97D\xce\xab\xf07\xad" +
	"\xff+pjY\xb7\xbaov\xbfr\x89\xc3\xaf\x115" +
	"\xb5\xf9\xc9 \xf2c?\xa0\xe6\xb1Y\x9b\x7fD\x15\x02" +
	"\xcf\x8f\x89\x9bG\xdf\xfc\x98\xe7\xa9\x82\x0ai\x10gl" +
	"\xb3\xb6\xba\xc8\xfc\xea\"\xf3\xab_2\xff\xd0\"\xf3\x0f" +
	"-2\xff\xd0\x97\xcco\xec\xd0\xa0\x9a\xa9\x96\x15\xb7\x91" +
	"\xc1m\xc4\xb5J\xa4\xc2i\xb7\x94c5\xe6\xe9S\x9c" +
	"\xab\x8dgvsj\xdf\xec\xbe2\x0e\xc1\xa4Y}\xd2" +
	"\x7f\x9f\xef\xf5\x11\x9cv\xe3A\x18\x1a\xca\xc3\x8cL=" +
	"@2D\xffq\"\xde\x1f\x06\x15\x1a-gT\xa1%" +
	"\xf9c\xb7\xd2\xc8\xe3\x9a\x8e\xe7\x19\xb7B\xdc\xb0\xd1\x9c" +
	"[,6#\xbb6\x1b\xaa'+\xaa\xe4q\xf5\xe1J" +
	"\xf1\xa0\x0a\xb7Ps!\xb7\x8fm\xfd\x8a\xb1m_1" +
	"\xb6}\x911ca,\xd3\x12\x8f\x0b\xc7\xbfY\xda^" +
	"/7Kq\xe3\x91o\xefJl\x92\xc1f\xcb\x86q" +
	"\xb2a\x8e\x1a\xc4\xc7.\xaa\xf7\xfb\x1f!Q\x1f\x8d\xc6" +
	"\xdd\x94\x97W\x88\x88t=\"\xfaF\x0e\x11Mm0" +
	"y*\xd3\xcc\x87\xbe\xb1\x9f\x11MeL\x9ez\xdc\xd0" +
	"9\xaf;\xd0\xa8\x0a\xfd\xac\x8a\xea)\xb7\xa4\xf9\xf7\x93" +
	"X\xe7]n!\x8dx\xe1\x86Y\xb3\xb5\xba\xf1\xef3" +
	"\xa9\xfew\x00\x00\x00\xff\xff>*\xd4m"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_b3ca6d2462778bb1,
		Nodes: []uint64{
			0x9691bc6bef5f044a,
			0xc98ab11e016b9507,
			0xfb7d655c3ad3e9bb,
		},
		Compressed: true,
	})
}
